Create table Personas(
idPersona int primary key, 
nombre varchar(40) not null,
apellido varchar(40) not null,
email varchar(60) unique not null,
telefono varchar(9) unique not null,
fchNacimiento date check(fchNacimiento < CONVERT(date,getdate(),(103))) not null
);
Create table Admins(
idAdmin int  references Personas(idPersona) primary key,
usuario varchar(40) unique not null,
contrasena varchar(40) not null,
estado varchar(40) not null, check(estado in ('Habilitado', 'No Habilitado')),
tipoDeAdmin varchar(30) not null,
check(tipoDeAdmin in ('Administrador global','Administrador de productos','Administrador de pedidos'))
);

Create table Camioneros(
idCamionero int  references Personas(idPersona) primary key,
cedula varchar(11) not null unique,
disponible varchar(15) not null check(disponible in ('Disponible','No disponible')),
fchManejo date check (fchManejo > (CONVERT(date,getdate(),(103)))) not null 
);


Create table Depositos(
idDeposito int primary key,
capacidad varchar(20) not null,
ubicacion varchar(50) not null unique,
temperatura numeric(3,0) not null,
condiciones varchar(80) not null
);

Create table Camiones(
idCamion int primary key,
marca varchar(30) not null,
modelo varchar(30) not null,
carga numeric(10,2) not null,
disponible varchar(30) not null check(disponible in ('Disponible','No disponible'))
);



Create table Clientes(
idCliente int  references Personas(idPersona) primary key,
usuario varchar(40) unique not null,
contrasena varchar(40) not null,
Direccion varchar(60) not null,
);


create table Granjas(
idGranja int primary key,
nombre varchar(40) not null unique,
ubicacion varchar(50) not null unique,
idCliente int foreign key references Clientes(idCliente)
);

create table Productos(
idProducto int primary key,
nombre varchar(30) not null unique,
precio numeric(6) not null, 
tipo varchar(30) not null,
tipoVenta varchar(15) not null,
imagen varchar(MAX) not null,
cantTotal varchar(40),
cantRes varchar(40)
);


Create table Fertilizantes(
idFerti int primary key, 
nombre varchar(40) not null unique,
tipo varchar(40) not null,
pH  numeric(4,2) check(ph>-1 and ph<15) not null,
impacto varchar(30) check(impacto 
in ('Alto','Medio','Bajo')) not null
);

Create table Pesticidas(
idPesti int primary key, 
nombre varchar(40) not null unique,
tipo varchar(40) not null,
pH  numeric(4,2) check(ph>-1 and ph<15) not null,
impacto varchar(30) check(impacto 
in ('Alto','Medio','Bajo')) not null
);

create table Lotes(
idGranja int references Granjas(idGranja),
idProducto int references Productos(idProducto),
fchProduccion date check(fchProduccion <= CONVERT(date,getdate(),(103))),
fchCaducidad date,
cantidad varchar(20) not null,
precio numeric(10,2) not null,
idDeposito int references Depositos(idDeposito),
primary key(idGranja, idProducto, fchProduccion)
);

create table Lotes_Pestis(
idPesticida int references Pesticidas(idPesti),
idGranja int,
idProducto int,
fchProduccion date,
cantidad varchar(30) not null,
primary key(idPesticida, idGranja, idProducto, fchProduccion),
foreign key(idGranja, idProducto, fchProduccion) references Lotes(idGranja, idProducto, fchProduccion)
);

create table Lotes_Fertis(
idFertilizante int references Fertilizantes(idFerti),
idGranja int,
idProducto int,
fchProduccion date,
cantidad varchar(30) not null,
primary key(idFertilizante, idGranja, idProducto, fchProduccion),
foreign key(idGranja, idProducto, fchProduccion) references Lotes(idGranja, idProducto, fchProduccion)
);



create table Pedidos(
idPedido int primary key,
idCliente int references Clientes(idCliente) not null,
estado varchar(40)  check(estado in ( 'Sin finalizar','Sin confirmar','Confirmado','En viaje', 'Finalizado')) not null,
viaje varchar(40) check(viaje in('Sin asignar', 'Asignado')) ,
costo numeric(10,2) not null,
fchPedido date not null check(fchPedido = (CONVERT(date,getdate(),(103)))),
fechaEntre date  check(fechaEntre >= (CONVERT(date,getdate(),(103)))),
informacionEntrega varchar(80) ,
idCamion int references Camioneros(idCamionero), 
idCamionero int references Camiones(idCamion) 
);


create table Pedidos_Prod(
idPedido int references Pedidos(idPedido),
idProducto int references Productos(idProducto),
cantidad varchar(40) not null,
primary key (idPedido, idProducto)
);


create table Lotes_Pedidos(
idPedido int references Pedidos(idPedido),
idGranja int ,
idProducto int ,
fchProduccion date ,
cantidad varchar(40) not null,
cantidadViaje varchar(40),
FOREIGN key  (idGranja, idProducto, fchProduccion)  references Lotes (idGranja, idProducto, fchProduccion),
primary key (idPedido,idGranja, idProducto, fchProduccion)
);
 

create table Viajes(
idViaje int primary key,
costo numeric(8,0) not null,
fecha date not null check(fecha >= CONVERT(date,getdate(),(103))),
idCamion int references Camiones(idCamion),
idCamionero int references Camioneros(idCamionero),
estado varchar(20) CHECK (estado IN ('Pendiente', 'Confirmado', 'En viaje', 'Finalizado'))
);


create table Viajes_Lots_Ped( 
idViaje int references Viajes(idViaje),
idGranja int ,
idProducto int ,
fchProduccion date ,
idPedido int,
cantidad varchar(40) not null,
FOREIGN key  (idPedido, idGranja, idProducto, fchProduccion)  references Lotes_Pedidos ( idPedido,idGranja, idProducto, fchProduccion),
Primary Key( idViaje, idGranja, idProducto, fchProduccion, idPedido)
);

create table Auditoria(
idAuditoria int identity(1,1) primary key,
idAdmin int references Admins(idAdmin),
fecha date,
tabla varchar(20),
tipo varchar(10) check(tipo = 'Alta' or tipo = 'Baja' or tipo = 'Modificar')
);
